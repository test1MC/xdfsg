<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="9648" MadCap:lastWidth="1211" MadCap:fileTags="File Tags/FileTagSetAuthor.Nikki,File Tags/FileTagSetStatus.Out for Review">
    <head>
        <link href="../../../Resources/TableStyles/AlternateShading.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/Stylesheets/Styles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>Keywords</h1>
        <div class="HeaderStripe">
        </div>
        <p>ExamView Test Generator provides you with numerous pre-defined constants to use when defining variables, conditions, and user-defined functions.</p>
        <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/AlternateShading.css');margin-left: 0;margin-right: auto;" class="TableStyle-AlternateShading" cellspacing="0">
            <col class="TableStyle-AlternateShading-Column-Column1" />
            <col class="TableStyle-AlternateShading-Column-Column1" />
            <thead>
                <tr class="TableStyle-AlternateShading-Head-Header1">
                    <th class="TableStyle-AlternateShading-HeadE-Column1-Header1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">Syntax</th>
                    <th class="TableStyle-AlternateShading-HeadD-Column1-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double abs(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the absolute value of the argument, x.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double acos(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc cosine of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguments-1to1.flsnp" /><MadCap:snippetText src="../../../Resources/Snippets/EV/Values0toPiInclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double acosh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc cosine of the argument, x. Arguments to the function must be greater than 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double acot(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc cotangent of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /><![CDATA[  ]]><MadCap:snippetText src="../../../Resources/Snippets/EV/ValuesPiNONinclusive.flsnp" />s are returned in the range -pi/2 to pi/2 non-inclusive.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double acoth(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc cotangent of the argument, x. Arguments to the function must be less than -1 or greater than 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double acsc(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc cosecant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguementslessthanorequal-1.flsnp" /><![CDATA[  ]]><MadCap:snippetText src="../../../Resources/Snippets/EV/ValuesPiNONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double acsch(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc cosecant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression AND expression</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns TRUE (1) only if both expressions evaluate to non-zero, otherwise returns FALSE (0). If the first expression evaluates to FALSE, the second expression is not evaluated.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arccos(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc cosine of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguments-1to1.flsnp" /><MadCap:snippetText src="../../../Resources/Snippets/EV/Values0toPiInclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arccosh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc cosine of the argument, x. Arguments to the function must be greater than 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arccot(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc cotangent of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /><![CDATA[  ]]><MadCap:snippetText src="../../../Resources/Snippets/EV/ValuesPiNONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arccoth(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc cotangent of the argument, x. Arguments to the function must be less than -1 or greater than 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arccsc(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc cosecant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguementslessthanorequal-1.flsnp" /><![CDATA[  ]]><MadCap:snippetText src="../../../Resources/Snippets/EV/ValuesPiNONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arccsch(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc cosecant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arcsec(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc secant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguementslessthanorequal-1.flsnp" /><![CDATA[  ]]><MadCap:snippetText src="../../../Resources/Snippets/EV/Values0toPiInclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arcsech(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc secant of the argument, x. Arguments to the function must be greater than 0 and less than or equal to 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arcsin(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc sine of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguments-1to1.flsnp" /> Values are returned in the range -pi/2 to pi/2 inclusive.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arcsinh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc sine of the argument, x.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arctan(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc tangent of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ValuesPiNONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arctan2(double y, double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc tangent of y / x. This function produces correct results even when the resulting angle is near -pi/2 or pi/2. <MadCap:snippetText src="../../../Resources/Snippets/EV/ValuesPiNONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double arctanh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc tangent of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguements-1to1NONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int asc(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the ascii value of the first character in the string.  If the string is empty, it returns 0.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double asec(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc secant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguementslessthanorequal-1.flsnp" /><![CDATA[  ]]><MadCap:snippetText src="../../../Resources/Snippets/EV/Values0toPiInclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double asech(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc secant of the argument, x. Arguments to the function must be greater than 0 and less than or equal to 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double asin(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc sine of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguments-1to1.flsnp" /> Values are returned in the range -pi/2 to pi/2 inclusive.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double asinh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc sine of the argument, x.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double atan(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc tangent of the argument, x. Values are returned in the range -pi/2 to pi/2 inclusive.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double atan2(double y, double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the arc tangent of y / x. It produces correct results even when the resulting angle is near -pi/2 or pi/2. <MadCap:snippetText src="../../../Resources/Snippets/EV/ValuesPiNONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double atanh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic arc tangent of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/Arguements-1to1NONinclusive.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double ceil(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Rounds up.  The function finds the smallest integer not less than the argument, x.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression choose(int <span class="Italic">which</span>, expression <span class="Italic">arg1</span>, expression <span class="Italic">arg2</span>, ...)</p>
                        <p class="ComputerText">- or -</p>
                        <p class="ComputerText">expression choose(int <span class="Italic">which</span>, list <span class="Italic">dataList</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>This function will select the argument at the which location in the list of arguments. The expression will be evaluated and returned. All of the arguments must be of the same type (string or numeric). If which is greater than the number of arguments, the function will use the remainder part of which to choose an argument. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p class="ComputerText">which = rand(5)</p>
                            <p><span class="ComputerText">choose(which, 1, 14, 3.2, 6, 9)</span>   will return <span class="ComputerText">3.2</span> when <span class="ComputerText">which = 3</span></p>
                            <p class="ComputerText">- or -</p>
                            <p class="ComputerText">which = rand(5)</p>
                            <p class="ComputerText">listOfData = list(1, 14, 3.2, 6, 9)</p>
                            <p><span class="ComputerText">choose(which, listOfData)</span>         will return <span class="ComputerText">9</span> when <span class="ComputerText">which = 5</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string chr(int x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Description</p>
                        <p>Returns a string character with the ASCII value of the argument, x. If x is less than 32 or greater than 255, the function will return a question mark. </p>
                        <div class="Note" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #00a69c;&quot; class=&quot;mcFormatColor&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;">
                            <p>You should use this function to generate characters found only in the Symbol font. Once the variable is inserted into a question or narrative, you need to highlight the variable and change it to Symbol font for it to display properly.</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int comb(int <span class="Italic">m</span>, int <span class="Italic">n</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the number of possible combinations. If we have a group of m objects, how many ways can they be grouped as n objects when position does not matter. The actual function is:</p>
                        <p>
                            <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML">
                                <math>
                                    <mrow>
                                        <mi mathvariant="monospace">c</mi>
                                        <mi mathvariant="monospace">o</mi>
                                        <mi mathvariant="monospace">m</mi>
                                        <mi mathvariant="monospace">b</mi>
                                        <mo>(</mo>
                                        <mi>m</mi>
                                        <mo>,</mo>
                                        <mi>n</mi>
                                        <mo>)</mo>
                                        <mo>=</mo>
                                        <mfrac>
                                            <mrow>
                                                <mi>m</mi>
                                                <mo>!</mo>
                                            </mrow>
                                            <mrow>
                                                <mo>(</mo>
                                                <mi>n</mi>
                                                <mo>!</mo>
                                                <mo>)</mo>
                                                <mo>(</mo>
                                                <mi>m</mi>
                                                <mo>−</mo>
                                                <mi>n</mi>
                                                <mo>)</mo>
                                                <mo>!</mo>
                                            </mrow>
                                        </mfrac>
                                    </mrow>
                                </math>
                            </MadCap:equation>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double cos(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the cosine of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/AngleinRadians.flsnp" /> Values are returned in the range -1 to 1 inclusive.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double cosh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic cosine of the argument, x.  The actual function is:</p>
                        <p>
                            <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML">
                                <math>
                                    <mrow>
                                        <mfrac>
                                            <mrow>
                                                <msup>
                                                    <mrow>
                                                        <mi>e</mi>
                                                    </mrow>
                                                    <mrow>
                                                        <mi>x</mi>
                                                    </mrow>
                                                </msup>
                                                <mo>+</mo>
                                                <msup>
                                                    <mrow>
                                                        <mi>e</mi>
                                                    </mrow>
                                                    <mrow>
                                                        <mo>−</mo>
                                                        <mi>x</mi>
                                                    </mrow>
                                                </msup>
                                            </mrow>
                                            <mrow>
                                                <mn>2</mn>
                                            </mrow>
                                        </mfrac>
                                    </mrow>
                                </math>
                            </MadCap:equation>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double cot(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the cotangent of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/AngleinRadians.flsnp" /><![CDATA[  ]]><MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double coth(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic cotangent of the argument, x. This evaluates to cosh(x) / sinh(x). <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double csc(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the cosecant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/AngleinRadians.flsnp" /><MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double csch(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic cosecant of the argument, x. This evaluates to 1 / sinh(x). <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string decs(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>This function returns a string representation of the decimal number.  If the function determines that the number, x, has an infinitely repeating decimal part, the repeating part will be displayed with an overbar.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">decs(18.333333333333)</span>             will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>18.</mn><mover><mrow><mn>3</mn></mrow><mrow><mo>¯</mo></mrow></mover></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">decs(0.0142857142857)</span>             will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>0.0</mn><mover><mrow><mn>142857</mn></mrow><mrow><mo>¯</mo></mrow></mover></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">decs(4.25)</span>                        will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>4.25</mn></mrow></math></MadCap:equation></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double deg(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Converts an argument, x, in radians to degrees.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">e</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>[Constant] 2.71828..., used in problems involving growth or decay (or compound interest).  Usually defined by the following equation:</p>
                        <p style="text-align: left;">
                            <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML">
                                <math>
                                    <mrow>
                                        <mi>e</mi>
                                        <mo>⁢</mo>
                                        <mo>=</mo>
                                        <munder>
                                            <mrow>
                                                <mi>lim</mi>
                                            </mrow>
                                            <mrow>
                                                <mi>x</mi>
                                                <mo>→</mo>
                                                <mi>∞</mi>
                                            </mrow>
                                        </munder>
                                        <msup>
                                            <mrow>
                                                <mtext> </mtext>
                                                <mo>(</mo>
                                                <mn>1</mn>
                                                <mo>+</mo>
                                                <mfrac>
                                                    <mrow>
                                                        <mn>1</mn>
                                                    </mrow>
                                                    <mrow>
                                                        <mi>n</mi>
                                                    </mrow>
                                                </mfrac>
                                                <mo>)</mo>
                                            </mrow>
                                            <mrow>
                                                <mi>n</mi>
                                            </mrow>
                                        </msup>
                                    </mrow>
                                </math>
                            </MadCap:equation>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression EQV expression</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns TRUE (1) if both expressions evaluate to non-zero or if both expressions evaluate to zero, otherwise returns FALSE (0).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double exp(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Calculates the exponential e to the x.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">FALSE</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>[Constant] 0.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double floor(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Rounds down.  The function finds the largest integer not greater than the argument, x.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string format(string <span class="Italic">format</span>, double <span class="Italic">x</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Writes formatted output to a string. For a complete description of formatting specifiers, look in any C programming manual. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">format("$%1.2f", 13.4)</span>     will return   "$13.40"</p>
                            <p><span class="ComputerText">format("%d feet", 17)</span>               will return   "17 feet"</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double frac(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the fractional part of the argument, x.  The return value will always be greater than or equal to 0 and less than 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string fracs(double numer, double denom)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>After reducing the fraction numer / denom, this function will return a string as either a whole number, or a fraction in the form "numer/denom".  When displayed, this function will draw a stacked fraction if necessary.  <MadCap:snippetText src="../../../Resources/Snippets/EV/Denom0.flsnp" /><![CDATA[  ]]></p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">fracs(22, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mfrac><mrow><mn>11</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">fracs(22, 11)</span>   will return  2</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int gcf(int x, int y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the greatest common factor of the arguments, x and y.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression if (int <span class="Italic">condition</span>, expression <span class="Italic">arg1</span>, expression <span class="Italic">arg2</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Use to implement a conditional expression.  If <span class="Italic">condition </span>evaluates to non-zero, <span class="Italic">arg1 </span>will be returned, else <span class="Italic">arg2 </span>will be returned. Both of the arguments must be of the same type (string or numeric).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression IMP expression</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns TRUE (1) if the first expression evaluates to non-zero and the second expression evaluates to zero, otherwise returns FALSE (0).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">INF</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>[Constant] ∞.  Can be used to represent positive or negative infinity (INF).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int instr(string x, string y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Searches in the string, x, for the sub-string, y.  If it finds it, the function will return the position in the string, x, where the first occurrence of y was found (between 1 and the length of string, x).  If the substring is not found, the function returns FALSE (0).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int int(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the integer portion of the argument, x.  If x is positive, it rounds down.  If x is negative, it rounds up.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double inv(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the inverse of the argument, x.  Actual function is 1 / x.  <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentsNOTzero.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int isalpha(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>If the first character of the string argument, x, is in the range "A" to "Z" or "a" to "z", the function will return TRUE (1), otherwise it will return FALSE (0).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int isdigit(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>If the first character of the string argument, x, is in the range "0" to "9", the function will return TRUE (1), otherwise it will return FALSE (0).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int isprime(int x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Evaluates the number to see if it is prime.  If the number is prime, the function will return TRUE (1), otherwise it returns FALSE (0).  </p>
                        <div class="Note" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #00a69c;&quot; class=&quot;mcFormatColor&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;">
                            <p>Values must be in the range 2 to 1,000,000.</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int isrelprime(int x, int y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Evaluates the two numbers to see if they are relatively prime.  If the greatest common factor of x and y is 1, the function will return TRUE (1), otherwise it returns FALSE (0).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int isunique(expression <span class="Italic">arg1</span>, expression <span class="Italic">arg2</span>, ...)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Compares the arguments to see if there are any duplicates. If there are duplicate arguments, the function will return FALSE (0), otherwise it returns TRUE (1). All of the arguments must be of the same type (string or numeric). This function is useful as a "condition" in evaluating multiple choice answer choices.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p class="ComputerText">(condition)  isunique(answerA, answerB, answerC, answerD)</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string lcase(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Converts the string argument, x, to lower case.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">lcase("ExamView")</span>  will return <span class="ComputerText"> "examview"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int lcd(int x, int y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the least common denominator of the arguments, x and y.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string left(string x, int y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the first y characters of the string argument, x.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p class="ComputerText">left("ExamView", 3)  will return "Exa"</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int len(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the number of characters in the string argument, x, not counting the null-terminating character.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">list(expression arg1, expression arg2, ...)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Use this function as a container to hold a group of similar expressions. The expressions must all be of the same type--either numeric or string.  If you create a list of strings, you must make sure that no string element contains a comma, since the comma is used to delimit the list. A variable defined as a "list" can be used as an argument for the "choose" function. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p class="ComputerText">fruitList = list("apple", "pear", "peach", "tangerine")</p>
                            <p class="ComputerText">whichFruit = rand(4)</p>
                            <p class="ComputerText">fruit = choose(whichFruit, fruitList)</p>
                            <p class="ComputerText">&#160;</p>
                            <p class="ComputerText">weightList = list(110, 142, 153, 180, 212)</p>
                            <p class="ComputerText">whichWeight = rand(5)</p>
                            <p class="ComputerText">weight = choose(whichWeight, weightList)</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double ln(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Calculates the natural log of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentGreater0.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double log(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Calculates the natural log of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentGreater0.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double log10(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Calculates the base 10 logarithm of the argument, x. Arguments to the function must be greater than or equal to zero.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double logb(double <span class="Italic">x</span>, double <span class="Italic">b</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Calculates the base b logarithm of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/ArgumentGreater0.flsnp" />  Actual function is:</p>
                        <p>
                            <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML">
                                <math>
                                    <mrow>
                                        <mfrac>
                                            <mrow>
                                                <mi>log</mi>
                                                <mo>⁡</mo>
                                                <mo>(</mo>
                                                <mi>x</mi>
                                                <mo>)</mo>
                                            </mrow>
                                            <mrow>
                                                <mi>log</mi>
                                                <mo>⁡</mo>
                                                <mo>(</mo>
                                                <mi>b</mi>
                                                <mo>)</mo>
                                            </mrow>
                                        </mfrac>
                                    </mrow>
                                </math>
                            </MadCap:equation>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string ltrim(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Trims spaces from the left side of the string argument, x. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">ltrim("  ExamView  ")</span>  will return <span class="ComputerText"> "ExamView  "</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">list makelist(int numValues, double lowerExtreme,</p>
                        <p class="ComputerText">double lowerQuartile, double median,</p>
                        <p class="ComputerText">double upperQuartile, double upperExtreme,</p>
                        <p class="ComputerText">Boolean sortData)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Use this function to create a "list" container to hold a group of data with numValues data, and the range, median, and interquartile ranges assigned.  Pass TRUE if you want the data elements to be arranged in ascending order.  Pass -1 for either extreme, either quartile, or the median if you do not require them to be specific values.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">makelist(3, 5, -1, 8, -1, 9, TRUE) </span>  will return <span class="ComputerText"> "5, 8, 9"</span></p>
                            <p>Both quartile values must be supplied to the makelist() function. If either one is not, they are both ignored.</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double max(double x, double y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the larger of two values.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double mean(list <span class="Italic">data</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the arithmetic mean (or average) of the data in the list.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double median(list <span class="Italic">data</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the middle value of the data in the list if the number of elements in the list is odd, or the average of the two middle terms if the number of elements is even.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string mid(string <span class="Italic">x</span>, int <span class="Italic">start</span>, int <span class="Italic">y</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns y characters starting at the start position in the string argument, x.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">mid("ExamView", 2, 4)</span>  will return <span class="ComputerText">"xamV"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double min(double <span class="ComputerText">x</span>, double <span class="ComputerText">y</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the smaller of two values.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string mixfracs(double numer, double denom)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>After reducing the fraction numer / denom, this function will return a string as either a whole number, or a fraction in the form "whole/numer/denom". When displayed, this function will draw a stacked fraction if necessary. <MadCap:snippetText src="../../../Resources/Snippets/EV/Denom0.flsnp" /></p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">mixfracs(22, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>3</mn><mfrac><mrow><mn>2</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">mixfracs(2, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML" style="mc-tag-and-class: span;"><math><mrow><mfrac><mrow><mn>1</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression MOD expression</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Divides the first expression by the second expression and returns the remainder. If the second expression is equal to zero, the function will return zero. Integer division may return a negative value to satisfy the identity:</p>
                        <p class="ComputerText">(-A)/B = -(A/B) = A/(-B)</p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">-34 MOD 6</span>  will return   <span class="ComputerText">-4</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double mode(list <span class="Italic">data</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the most common value for the data in the list.  If the data is multimodal, this function returns zero.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">NO</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>[Constant] 0.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">NOT expression</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>If expression evaluates to non-zero, this will return FALSE (0), otherwise it will return TRUE (1).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression OR expression</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns TRUE (1) if either expression evaluates to non-zero, otherwise returns FALSE (0). If the first expression evaluates to TRUE, the second expression is not evaluated.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int perm(int m, int n)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the number of possible permutations. Given that position is important, if one has m objects, how many unique ways can they be placed in n positions. The actual function is:</p>
                        <p>
                            <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML">
                                <math>
                                    <mrow>
                                        <mi>p</mi>
                                        <mi>e</mi>
                                        <mi>r</mi>
                                        <mi>m</mi>
                                        <mo>(</mo>
                                        <mi>m</mi>
                                        <mo>,</mo>
                                        <mi>n</mi>
                                        <mo>)</mo>
                                        <mo>=</mo>
                                        <mfrac>
                                            <mrow>
                                                <mi>m</mi>
                                                <mo>!</mo>
                                            </mrow>
                                            <mrow>
                                                <mo>(</mo>
                                                <mi>m</mi>
                                                <mo>−</mo>
                                                <mi>n</mi>
                                                <mo>)</mo>
                                                <mo>!</mo>
                                            </mrow>
                                        </mfrac>
                                    </mrow>
                                </math>
                            </MadCap:equation>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">PI</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>[Constant] 3.1415926....  By definition, PI is the ratio of the circumference of a circle to its diameter.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double pow(double x, double y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Calculates x to the power of y.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int prime(int <span class="Italic">x</span>, int <span class="Italic">y</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns a pseudo-random prime number in the range x to y, inclusive. </p>
                        <div class="Note" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #00a69c;&quot; class=&quot;mcFormatColor&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;">
                            <p>Values must be in the range 2 to 1,000.</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double quartile(list <span class="ComputerText">data</span>, int <span class="ComputerText">whichQuartile</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns one of the divisions of observations of the data in the list.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p class="ComputerText">theList = list(30, 25, 19, 26, 31, 29, 23)</p>
                            <p><span class="ComputerText">quartile(theList, 0)</span>  will return "19", the lower extreme</p>
                            <p><span class="Italic">quartile(theList, 1)</span>  will return "23", the lower quartile</p>
                            <p><span class="Italic">quartile(theList, 2)</span>  will return "27", the median</p>
                            <p><span class="Italic">quartile(theList, 3)</span>  will return "30", the upper quartile</p>
                            <p><span class="Italic">quartile(theList, 4)</span>  will return "31", the upper extreme</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double rad(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Converts an argument, x, in degrees to radians.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int rand(int x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns a pseudo-random number in the range 1 to the argument, x, inclusive.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double range(double x, double y, double increment {optional})</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns a pseudo-random number in the range x to y, inclusive. If the optional argument, increment, is included, the function will only select values in the given range that are offset from the lower limit by increment.  </p>
                        <div class="Note" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #00a69c;&quot; class=&quot;mcFormatColor&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;">
                            <p>If  increment is in the form .1, .01, .001, etc., then the result will always have the same number of decimal places as the increment.  Also, if x is less than zero, and y is greater than zero, and an increment is provided, then the value 0 will never be returned by the function.</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string rfracs(double numer, double denom)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Reduces the fraction numer / denom.  When displayed, this function will always draw a ratio in stacked fraction form. <MadCap:snippetText src="../../../Resources/Snippets/EV/Denom0.flsnp" /></p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">rfracs(22, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mfrac><mrow><mn>11</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">rfracs(22, 11)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mfrac><mrow><mn>2</mn></mrow><mrow><mn>1</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string right(string x, int y)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the last y characters of the string argument, x. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">right("ExamView", 3)</span>  will return <span class="ComputerText"> "iew"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double round(double x, int precision)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Rounds the argument, x, to have precision decimal places.  </p>
                        <div class="Note" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #00a69c;&quot; class=&quot;mcFormatColor&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;">
                            <p>If precision is greater than or equal to 10, this function rounds the argument, x, to the nearest precision.  </p>
                        </div>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">round(3.14159265, 4)</span> will return  3.1416</p>
                            <p><span class="ComputerText">round(1492.14, 10)</span>   will return  1490</p>
                            <p><span class="ComputerText">round(1492.14, 100)</span>  will return  1500</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string rtrim(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Trims spaces from the right side of the string argument, x. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">rtrim("  ExamView   ")</span>  will return <span class="ComputerText">"  ExamView"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string sciens(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Function returns a string representation of the argument, x, in scientific notation.  </p>
                        <div class="Note" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #00a69c;&quot; class=&quot;mcFormatColor&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;">
                            <p>You must be sure to also change the format to Scientific Notation and select the number of decimal places when formatting the variable.  </p>
                        </div>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">sciens(143948.123)</span>   will return     <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>1.44</mn><mo>×</mo><msup><mrow><mn>10</mn></mrow><mrow><mn>5</mn></mrow></msup></mrow></math></MadCap:equation>when using 2 decimal places.</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sdev(list data)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the standard deviation of the data values in the list.  Data values are assumed to be the entire population (not a sample).  Result is the square root of the population variance. (see variance).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sec(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the secant of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/AngleinRadians.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sech(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic secant of the argument, x. This evaluates to 1 / cosh(x).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string sentence(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Changes string argument, x, into a sentence that can be subdivided using the choose function. This allows us to create a sentence that can word wrap. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">sentence("This is a long sentence that might need to wrap.")</span>
                            </p>
                            <p><span class="ComputerText">choose(3, mySentence)</span> to access the 3rd tenth of the variable  <span class="ComputerText">mySentence</span>.</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string sfracs(double <span class="Italic">numer</span>, double <span class="Italic">denom</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>After reducing the fraction numer / denom, this function will return a string as either a whole number, or a fraction in the form "numer/denom".  When displayed, this function will draw a small stacked fraction if necessary.  <MadCap:snippetText src="../../../Resources/Snippets/EV/Denom0.flsnp" /></p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">sfracs(22, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mfrac><mrow><mn>11</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">sfracs(22, 11)</span>   will return  2</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">int sgn(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>If the argument, x, is less than zero, this function returns -1.  If the argument, x, is greater than zero, this function returns 1.  Otherwise it returns zero.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string sgns(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>If the argument, x, is less than zero, this function returns "-".  Otherwise it returns "+".</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string sigfig(double <span class="Italic">x</span>, int <span class="Italic">numSigFigs</span>, Boolean <span class="Italic">forceNumSigFigs</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Creates a string version of the argument, x, that has numSigFigs significant digits.  If forceNumSigFigs is TRUE, then the string returned will have exactly numSigFigs significant digits (even if the function has to randomly create some digits).  If forceNumSigFigs is FALSE, then the function will return a string that has numSigFigs significant digits or less.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">sigfig(12362, 3, FALSE)</span>           will return  12400</p>
                            <p><span class="ComputerText">sigfig(2.14, 5, TRUE)</span>             will return  2.1400</p>
                            <p><span class="ComputerText">sigfig(1400, 4, TRUE)</span>             might return  1427</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sin(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the sine of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/AngleinRadians.flsnp" /> Values are returned in the range -1 to 1 inclusive.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sinh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic sine of the argument, x.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string smixfracs(double numer, double denom)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>After reducing the fraction numer / denom, this function will return a string as either a whole number, or a fraction in the form "whole/numer/denom".  When displayed, this function will draw a small stacked fraction if necessary.  <MadCap:snippetText src="../../../Resources/Snippets/EV/Denom0.flsnp" /></p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">smixfracs(22, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>3</mn><mfrac><mrow><mn>2</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">smixfracs(2, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mfrac><mrow><mn>1</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">list sort(Boolean <span class="Italic">sortAscending</span>, double <span class="Italic">arg1</span>, double <span class="Italic">arg2</span>, ...)</p>
                        <p class="ComputerText">- or -</p>
                        <p class="ComputerText">list sort(Boolean <span class="Italic">sortAscending</span>, list <span class="Italic">dataList</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>This function will sort the list of arguments. All of the arguments must be numeric (or the list must have been composed of only numeric data).  Function will return a list that can be used as an argument for choose( ).</p>
                        <p class="ComputerText">sort(TRUE, 1, 14, 3.2, 6, 9)  will return  1, 3.2, 6, 9, 14</p>
                        <p class="ComputerText">- or -</p>
                        <p class="ComputerText">listOfData = list(12, -3, 5)</p>
                        <p><span class="ComputerText">sort(FALSE, listOfData)</span>           will return <span class="ComputerText"> "12, 5, -3"</span></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sqr(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the positive square root of the argument, x. The argument must be greater than or equal to zero.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string sqrs(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>After reducing the argument, x, to a multiple of a whole number and a radical, it returns a string representation in the form whole (square root) radical.  When displayed, this function will draw a radical if necessary.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">sqrs(18)</span>  will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>3</mn><msqrt><mrow><mn>2</mn></mrow></msqrt></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">sqrs(16)</span>  will return  4</p>
                            <p><span class="ComputerText">sqrs(-8)</span>  will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mn>2</mn><mi>i</mi><msqrt><mrow><mn>2</mn></mrow></msqrt></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">sqrs(3.14159)</span>  will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><msqrt><mrow><mn>3.14159</mn></mrow></msqrt></mrow></math></MadCap:equation></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sqrt(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the positive square root of the argument, x. The argument must be greater than or equal to zero.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string srfracs(double <span class="Italic">numer</span>, double <span class="Italic">denom</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Reduces the fraction numer / denom.  When displayed, this function will always draw a small ratio in stacked fraction form.  <MadCap:snippetText src="../../../Resources/Snippets/EV/Denom0.flsnp" /></p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">srfracs(22, 6)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mfrac><mrow><mn>11</mn></mrow><mrow><mn>3</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                            <p><span class="ComputerText">srfracs(22, 11)</span>   will return <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML"><math><mrow><mfrac><mrow><mn>2</mn></mrow><mrow><mn>1</mn></mrow></mfrac></mrow></math></MadCap:equation></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string str(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns a string representation of the argument, x.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">str(18)</span>  will return  <span class="ComputerText">"18"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string strdup(string x, int numTimes)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns a string by combining the string argument, x, a variable number of times.</p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">strdup("(2)", 5) </span> will return  <span class="ComputerText">"(2)(2)(2)(2)(2)"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double sum(list data)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the sum of the data values in the list.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string symbol(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Converts the string argument, x, to the appropriate Symbol character. </p>
                        <div class="Note" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #00a69c;&quot; class=&quot;mcFormatColor&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;">
                            <p>Once the variable is inserted into a question or narrative, you need to highlight the variable and change it to Symbol font for it to display properly.  </p>
                        </div>
                        <p>The following list shows valid arguments to this function. For all other Symbol characters, use the chr function.</p>
                        <p><span class="ComputerText">symbol ("&lt;=")</span> will return "≤"</p>
                        <p><span class="ComputerText">symbol ("&gt;=") </span>will return "≥"</p>
                        <p><span class="ComputerText">symbol ("&lt;&gt;") </span>will return "≠"</p>
                        <p><span class="ComputerText">symbol ("x") </span>will return "×"</p>
                        <p><span class="ComputerText">symbol (".")</span> will return "▪"</p>
                        <p><span class="ComputerText">symbol ("/")</span> will return "٪"</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double tan(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the tangent of the argument, x. <MadCap:snippetText src="../../../Resources/Snippets/EV/AngleinRadians.flsnp" /></p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double tanh(double x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Computes the hyperbolic tangent of the argument, x.  This evaluates to sinh(x) / cosh(x).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">testversion</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>[pseudo constant] Represents the current test version ("A", "B", "C", etc.).</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string trim(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Trims spaces from both the left and the right side of the string argument, x. </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">trim("  ExamView   ")</span>  will return <span class="ComputerText"> "ExamView"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">TRUE</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>[Constant] 1.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">string ucase(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Converts the string argument, x, to upper case.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">ucase("ExamView")</span>  will return <span class="ComputerText"> "EXAMVIEW"</span></p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">list unsort(list <span class="Italic">dataList</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>This function will "unsort" or scramble the list of arguments. The list passed in as an argument must have been composed of only numeric data. Function will return a list that can be used as an argument for choose( )</p>
                        <p class="ComputerText">      listofData = list (1, 2, 3, 4)</p>
                        <p class="ComputerText">      unsort(ListofData) might return "2, 4, 3, 1"</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double val(string x)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns a numeric representation of the string argument, x.  </p>
                        <div class="Example" MadCap:autonum="&lt;span style=&quot;font-family: 'Montserrat';&quot; class=&quot;mcFormatFamily&quot;&gt;&lt;span style=&quot;color: #31b24a;&quot; class=&quot;mcFormatColor&quot;&gt;EXAMPLE&lt;/span&gt;&lt;/span&gt; ">
                            <p><span class="ComputerText">val("18")</span>  will return  18</p>
                            <p><span class="ComputerText">val("-4")</span>  will return  -4</p>
                        </div>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">double variance(list <span class="Italic">data</span>)</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the variance of the data values in the list.  Data values are assumed to be the entire population (not a sample).  Actual formula used is:</p>
                        <p>
                            <MadCap:equation xmlns:dsi="http://www.w3.org/1998/Math/MathML">
                                <math>
                                    <mrow>
                                        <mi>variance</mi>
                                        <mo>(</mo>
                                        <mi>x</mi>
                                        <mo>)</mo>
                                        <mo>=</mo>
                                        <mfrac>
                                            <mrow>
                                                <mn>1</mn>
                                            </mrow>
                                            <mrow>
                                                <mi>N</mi>
                                            </mrow>
                                        </mfrac>
                                        <mstyle displaystyle="true">
                                            <mrow>
                                                <munderover>
                                                    <mrow>
                                                        <mo>∑</mo>
                                                    </mrow>
                                                    <mrow>
                                                        <mi>i</mi>
                                                        <mo>=</mo>
                                                        <mn>1</mn>
                                                    </mrow>
                                                    <mrow>
                                                        <mi>n</mi>
                                                    </mrow>
                                                </munderover>
                                                <msup>
                                                    <mrow>
                                                        <mo>(</mo>
                                                        <mrow>
                                                            <msub>
                                                                <mrow>
                                                                    <mi>X</mi>
                                                                </mrow>
                                                                <mrow>
                                                                    <mi>i</mi>
                                                                </mrow>
                                                            </msub>
                                                            <mo>−</mo>
                                                            <mi>μ</mi>
                                                        </mrow>
                                                        <mo>)</mo>
                                                    </mrow>
                                                    <mrow>
                                                        <mn>2</mn>
                                                    </mrow>
                                                </msup>
                                            </mrow>
                                        </mstyle>
                                    </mrow>
                                </math>
                            </MadCap:equation>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyE-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">expression XOR expression</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyD-Column1-Body1">
                        <p>Returns the bitwise exclusive-OR or the two expressions.</p>
                    </td>
                </tr>
                <tr class="TableStyle-AlternateShading-Body-Body1">
                    <td class="TableStyle-AlternateShading-BodyB-Column1-Body1" style="vertical-align: middle;padding-left: 6px;padding-right: 6px;padding-top: 3px;padding-bottom: 3px;border-right-style: none;border-right-width: 1px;border-right-color: #ffffff;">
                        <p class="ComputerText">YES</p>
                    </td>
                    <td class="TableStyle-AlternateShading-BodyA-Column1-Body1">
                        <p>[Constant] 1.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>